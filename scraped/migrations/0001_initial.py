# Generated by Django 4.2.1 on 2023-05-28 20:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EcommerceStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.IntegerField(blank=True, null=True)),
                ('last_scrape_start', models.IntegerField(blank=True, null=True)),
                ('last_scrape_end', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_monitored', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('discovery_url', models.URLField(max_length=255, unique=True)),
                ('package_name', models.CharField(blank=True, max_length=50)),
                ('module_name', models.CharField(blank=True, max_length=50)),
                ('class_name', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocalStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.IntegerField(blank=True, null=True)),
                ('last_scrape_start', models.IntegerField(blank=True, null=True)),
                ('last_scrape_end', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_monitored', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('scraped_id', models.IntegerField()),
                ('url', models.URLField(blank=True, max_length=255)),
                ('api_url', models.URLField(blank=True, max_length=255)),
                ('parrent_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraped.ecommercestore')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.IntegerField(blank=True, null=True)),
                ('last_scrape_start', models.IntegerField(blank=True, null=True)),
                ('last_scrape_end', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_monitored', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(db_index=True, max_length=255, unique=True)),
                ('api_url', models.URLField(blank=True, max_length=255)),
                ('scraped_id', models.IntegerField(blank=True, null=True)),
                ('type_id', models.CharField(blank=True, max_length=100)),
                ('short_description', models.TextField(blank=True)),
                ('sku', models.CharField(blank=True, max_length=50)),
                ('ean', models.CharField(blank=True, max_length=50)),
                ('brand_name', models.CharField(blank=True, max_length=50)),
                ('promotion', models.BooleanField(default=False)),
                ('promotion_name', models.CharField(blank=True, max_length=150)),
                ('default_price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('promo_price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('unit_type', models.CharField(blank=True, max_length=10)),
                ('conversion', models.CharField(blank=True, max_length=10)),
                ('conversion_unit', models.CharField(blank=True, max_length=10)),
                ('qty_per_package', models.IntegerField(blank=True, null=True)),
                ('tax_rate', models.CharField(blank=True, max_length=10)),
                ('parrent_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraped.ecommercestore')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLocalStoreData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.IntegerField(blank=True, null=True)),
                ('last_scrape_start', models.IntegerField(blank=True, null=True)),
                ('last_scrape_end', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_monitored', models.BooleanField(default=False)),
                ('parrent_product_name', models.CharField(max_length=255)),
                ('parrent_local_store_name', models.CharField(max_length=255)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('quantity', models.IntegerField(null=True)),
                ('stock_status', models.IntegerField(null=True)),
                ('availability', models.CharField(blank=True, max_length=10)),
                ('parrent_local_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraped.localstore')),
                ('parrent_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraped.product')),
            ],
            options={
                'verbose_name_plural': 'Product LocalStore Data',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.IntegerField(blank=True, null=True)),
                ('last_scrape_start', models.IntegerField(blank=True, null=True)),
                ('last_scrape_end', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=255, unique=True)),
                ('scraped_id', models.IntegerField(blank=True, null=True)),
                ('api_url', models.URLField(blank=True, max_length=255)),
                ('has_childs', models.BooleanField(default=False)),
                ('has_products', models.BooleanField(default=False)),
                ('category_level', models.IntegerField(blank=True, null=True)),
                ('product_count', models.IntegerField(blank=True, null=True)),
                ('parrent_category_id', models.IntegerField(blank=True, null=True)),
                ('children_category_count', models.IntegerField(blank=True, null=True)),
                ('is_monitored', models.BooleanField(default=False)),
                ('child_categories', models.ManyToManyField(to='scraped.category')),
                ('child_products', models.ManyToManyField(to='scraped.product')),
                ('parrent_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraped.ecommercestore')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.AddConstraint(
            model_name='productlocalstoredata',
            constraint=models.UniqueConstraint(fields=('parrent_product', 'parrent_local_store', 'last_scrape_end'), name='Unique ProductLocalData'),
        ),
    ]
